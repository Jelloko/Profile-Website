/*
Colors used

Text Color (Dark Blue): #000066;
Visited Links (Purple): #800080;
Active Links (Orange): #e0b354;
Hovered Links (Teal): #8EE5EE;
Button 1 and 3 (Dark Red): #990000;
Button 2 (Pink): #FF505F;

 */
:root {
  --text-color: #000066;
  --visited-links: #800080;
  --active-links: #e0b354;;
  --hovered-links: #8EE5EE;
  --button-1-and-3: #990000;
  --button-2: #FF505F;
  --sun-1: #edc655;
  --sun-2: #f76414;
  --lig: lightgray;
  --fwbody: 400;
  --fw-1: 700;
  --fsbody: 16px;
  --fs-1: 30px;
  --fs-2: 24px;
  --fs-3: 18px;

}
a {
  color: var(--text-color);
}

body {
font-family: 'Lato', sans-serif;
  font-weight: var(--fwbody);
  font-size: var(--fsbody);
  /* Sets the font size to 16px */
  line-height: 1.6;
  /* Sets the line-height to 1.6 */
  color: var(--text-color);
}
* {
  box-sizing: border-box;
}
.page-header {
  display: flex;
  width: 100%;
  padding: 20px;
}
.page-header__item {
  flex: 0 1 200px;
}
.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}
.navigation-list__item--active {
  text-decoration: none;
}
.navigation-list__item {
	text-decoration: none;
}
.navigation-list {
  list-style-type: none;
}
.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}
.profile {
  max-width: 700px;
  margin: 0 auto;
}
.profile__portrait {
  float: left;
  width: 250px;
  height: auto;
  margin-right: 40px;
  border-radius: 50%;
}
.page-footer {
  clear: both;
  display: flex;
  flex-direction: column;
  text-align: center;
}
.grid__item {
 display: inline-block;
 width: 33%;
}

@media all and (max-width: 500px) {
  .grid {
    display: grid;
    grid-template-columns: 1fr;
  }
}
@media all and (min-width: 500px) and (max-width: 750px){
  .grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
}
@media all and (max-width: 750px) {
  .grid {
    display: grid;
    grid-gap: 10px;
  }
  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  
}
.grid__item {
  background-color: var(--lig);
  width: auto;
   min-height: auto;
   margin: 0;
}

a:hover, a:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
  /* hovered link */
  color: var(--hovered-links);
}
a:visited {
  /* visited link */
  color: var(--visited-links);
}

a:active {
  /* active-link */
  color: var(--active-links);
}
input, textarea, select, button {
  font-family: system-ui;
}
button,
.button3 {
  /* overwrites browser defaults and resets the border */
  border: none;
  /* takes the font from the outer container */
  font-family: inherit;
  /* styles the background color, font color, and text decoration (underline, etc.) of the button */
  background-color: var(--button-1-and-3);
  color: var(--text-color);
  text-decoration: none;
  /*adds spacing to the button (this will be discussed more in-depth later) */
  padding: 10px;
  border-radius: 3px;
  /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition-duration: 1s;
  transition-property: opacity;

}
button:hover, button:focus,
.button3:hover, .button3:focus {
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  opacity: 0.8;}
  .button__secondary {
  background-color: var(--button-2);
  color: var(--text-color);
 }

h1 {
  font-size: var(--fs-1);
  font-weight: var(--fw-1);
}

h2 {
  font-size: var(--fs-2);
  font-weight: var(--fw-1);
}

h3 {
  font-size: var(--fs-3);
  font-weight: var(--fw-1);
}

@keyframes color-change {
  from {
    fill: var(--sun-1);
  }
  to {
    fill: var(--sun-2);
  }
}
.sun {
  animation-duration: 4s;
  animation-name: color-change;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}
@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}
.cloud-front {
  animation-duration: 30s;
  animation-name: cloud-move;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}
@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }
  to {
    transform: translate(100px, 48px);
  }
}
.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}